#!/usr/bin/env bash
#
# preprocess  –  Clean the raw BoardGameGeek dataset and emit a tab-separated file
#
# Steps performed:
#   1. Convert CRLF line endings to LF and strip UTF-8 BOM
#   2. Change field separator from semicolon (;) to TAB
#   3. Change 3,5   → 3.5   **only for pure numeric values**
#   4. Remove non-ASCII characters
#   5. Generate new unique IDs where the ID field is empty
#   6. Fix the blank header cell at the end of line 1 (“Domains”)
#
# Usage:  preprocess <input-file>  > output.tsv
set -euo pipefail

infile=${1:-}
[[ -z "$infile" || ! -f "$infile" ]] && { echo "Usage: $0 <input-file>" >&2; exit 1; }

########################################
# 1. Convert to Unix newlines, remove BOM
########################################
tmp=$(mktemp)
tr -d '\r' < "$infile" | sed '1s/^\xEF\xBB\xBF//' > "$tmp"

########################################
# 2. Determine the current maximum ID
########################################
max_id=$(awk -F';' 'NR>1 && $1 != "" { if ($1+0 > max) max = $1 } END { print max+0 }' "$tmp")

########################################
# 3. Clean line by line and print TSV
########################################
awk -v FS=';' -v OFS='\t' -v max="$max_id" '
# ---- helper: convert comma decimal only if field is purely numeric ----
function maybe_fix_float(v) {
    if (v ~ /^[0-9]+,[0-9]+$/) { sub(/,/, ".", v) }
    return v
}

NR == 1 {
    # header line: give the blank last column its name
    for (i = 1; i <= NF; i++) if ($i == "") $i = "Domains"
}

NR > 1 {
    # fill empty IDs with new unique numbers
    if ($1 == "" || $1 ~ /^[[:space:]]+$/) { ++max; $1 = max }
}

{
    for (i = 1; i <= NF; i++) $i = maybe_fix_float($i)
    print
}
' "$tmp" |
# 4. strip non-ASCII characters (keep TAB/LF/CR)
tr -cd '\11\12\15\40-\176'

rm -f "$tmp"   # 5. cleanup
